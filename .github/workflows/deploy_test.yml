name: deploy pr title update

on:
  pull_request:
    branches:
      - 'deploy/*/base'

permissions: write-all

env:
  LAYER_NAME: "deploy"
  ISSUE_PREFIX: "AMZUAND"

jobs:
  deploy-pr-title-update:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Title
        id: pr_title
        run: |
          PR_TITLE=$(curl -sH "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" | jq -r .title)
         
          # PR 제목이 "$LAYER_NAME <"로 시작하면 작업 종료
          if [[ "$PR_TITLE" == "$LAYER_NAME <"* ]]; then
            echo "PR 제목이 '$LAYER_NAME <'로 시작하므로 작업을 종료합니다."
            exit 0
          else
            echo "PR 제목이 '$LAYER_NAME <'로 시작하지 않으므로 다음 스텝으로 진행합니다."
            echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
          fi
      - name: Get Merged Branch Name
        id: prefix_title
        run: |
          BASE_BRANCH_NAME="${{ github.event.pull_request.base.ref }}"
          echo "Merged Branch Name: $BASE_BRANCH_NAME"
           # 브랜치 이름에서 "배포 이름" 부분 추출
          BASE_EXTRACTED_NAME=$(echo "$BASE_BRANCH_NAME"| awk -F'/' '{print $2}')
          # PR의 브랜치 이름 가져오기
          HEAD_BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo "PR의 브랜치 이름: $HEAD_BRANCH_NAME"
          # 브랜치 이름에서 "$ISSUE_PREFIX-1234" 부분 추출
          HEAD_EXTRACTED_NAME=$(echo "$HEAD_BRANCH_NAME" | grep -oP "$ISSUE_PREFIX-\d+")
          if [[ -n "$BASE_EXTRACTED_NAME" && -n "$HEAD_EXTRACTED_NAME" ]]; then
            echo "추출된 배포명: $BASE_EXTRACTED_NAME"
            echo "추출된 이슈명: $HEAD_EXTRACTED_NAME"
            echo "::set-output name=prefix_title::$LAYER_NAME/$BASE_EXTRACTED_NAME <- $HEAD_EXTRACTED_NAME"
          else
            echo "추출할 이름이 없습니다."
            exit 0
          fi
          
      - name: Update PR Title
        if: ${{ steps.prefix_title.outputs.prefix_title != '' && steps.pr_title.outputs.pr_title != '' }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"  # 업데이트할 PR 번호
          NEW_TITLE="${{ steps.prefix_title.outputs.prefix_title }} ${{ steps.pr_title.outputs.pr_title }}"
          # GitHub API를 사용하여 PR 제목 업데이트
          curl -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"title\":\"$NEW_TITLE\"}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER"

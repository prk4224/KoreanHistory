name: master pr title update

on:
  pull_request:
    branches:
      - 'master'

permissions: write-all

env:
  HEAD_LAYER_NAME: "release"
  BASE_LAYER_NAME: "master"

jobs:
  feature-pr-title-update:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Title
        id: pr_title
        run: |
          PR_TITLE=$(curl -sH "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" | jq -r .title)
          # PR 제목에 "$BASE_LAYER_NAME <- $HEAD_LAYER_NAME/"로 시작되면 종료
          if [[ "$PR_TITLE" == *"$BASE_LAYER_NAME <- $HEAD_LAYER_NAME/"* ]]; then
            echo "# PR 제목에 '$BASE_LAYER_NAME <- $HEAD_LAYER_NAME/'로 시작하므로 종료합니다."
            exit 0
          else
            echo "PR 제목이 '$BASE_LAYER_NAME <- $HEAD_LAYER_NAME/'가 로 시작하지 않으므로 다음 스텝으로 진행합니다."
            echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
          fi
      - name: Get Issue Name
        id: prefix_title

        run: |
          # PR의 브랜치 이름 가져오기
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo "PR의 브랜치 이름: $BRANCH_NAME"
          # 브랜치 이름에서 "$HEAD_LAYER_NAME/{버전이름}/base" 중 {버전이름} 부분 추출
          EXTRACTED_NAME=$(echo $BRANCH_NAME | awk -F/ '{print $2}')
          if [[ -n "$EXTRACTED_NAME" ]]; then
            echo "PR 추출된 이름: $EXTRACTED_NAME"
            echo "prefix_title=$BASE_LAYER_NAME <- $HEAD_LAYER_NAME/$EXTRACTED_NAME" >> $GITHUB_OUTPUT

          else
            echo "추출할 이름이 없습니다."
            exit 0
          fi
      - name: Update PR Title
        if: ${{ steps.prefix_title.outputs.prefix_title != '' && steps.pr_title.outputs.pr_title != '' }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"  # 업데이트할 PR 번호
          NEW_TITLE="${{ steps.prefix_title.outputs.prefix_title }} ${{ steps.pr_title.outputs.pr_title }}"
          # GitHub API를 사용하여 PR 제목 업데이트
          curl -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"title\":\"$NEW_TITLE\"}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER"
